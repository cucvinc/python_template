name: Build, Push & Run Docker on Mac

on:
  push:
    branches: [dev]

jobs:
  build-push-run:
    runs-on: self-hosted
    environment: dev

    steps:
      - uses: actions/checkout@v3

      # 1️⃣ Login al container registry (Docker Hub in questo esempio)
      - name: Docker Login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # 2️⃣ Costruzione immagine con tag sia "latest" che commit hash
      - name: Build Docker image
        run: |
          IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/python_template_image
          COMMIT_HASH=$(echo $GITHUB_SHA | cut -c1-7)
          docker build -t $IMAGE_NAME:latest -t $IMAGE_NAME:$COMMIT_HASH .

      # 3️⃣ Push su registry
      - name: Push Docker image
        run: |
          IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/python_template_image
          COMMIT_HASH=$(echo $GITHUB_SHA | cut -c1-7)
          docker push $IMAGE_NAME:latest
          docker push $IMAGE_NAME:$COMMIT_HASH

      # 4️⃣ Stop e rimozione vecchio container
      - name: Stop old container if exists
        run: |
          docker stop python_template_container || true
          docker rm python_template_container || true

      # 5️⃣ Run nuovo container dal registry
      - name: Run Docker container
        run: |
          IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/python_template_image
          docker run -d -p 4000:4000 --name python_template_container $IMAGE_NAME:latest

      # 6️⃣ Test API
      - name: Test API
        run: |
          echo "Testing /hello endpoint..."
          sleep 5
          curl -s http://localhost:4000/hello
